name: Build Test

on:
  push:
    paths-ignore:
    - README.md
    - VERSION_INFO
    - .ci/*
    - .readthedocs.yml
    - docs-src/*
    - docs-img/*
    - docs-jupyter/*
    - docs-doxygen/*
    - docs-sphinx/*
    - docs/*
    - studies/*
    - src/cuda-kernels
    - cuda-kernels
  # Don't run for any PR
  pull_request:
  schedule:
  - cron: '0 12 1 * *'

  workflow_dispatch:

concurrency:
  group: build-test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Windows:
    strategy:
      matrix:
        python.version:
        - '3.9'
        - '3.10'
        - '3.9'
        - '3.8'
        - '3.7'
        - '3.6'
    runs-on: windows-2019
    env:
      PIP_ONLY_BINARY: cmake
    steps:
    - uses: actions/checkout@v2
    - name: Python ${{ matrix.python.version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python.version }}
    - name: Install Pip
      run: python -m pip install --upgrade pip
    - name: Print versions
      run: python -m pip list
    - name: Build
      run: python -m pip install -v .[test,dev]
    - name: Check if kernel specification is sorted
      run: python dev/kernel-diagnostics.py --check-spec-sorted
    - name: Generate Kernel tests
      run: python dev/generate-tests.py
    - name: Test specification
      run: python -m pytest -vv -rs tests-spec
    - name: Test specification with explicitly defined values
      run: python -m pytest -vv -rs tests-spec-explicit
    - name: Test CPU kernels
      run: python -m pytest -vv -rs tests-cpu-kernels
    - name: Test
      run: python -m pytest -vv -rs tests

  MacOS:
    strategy:
      matrix:
        python.version:
        - '3.10'
        - '3.9'
        - '3.8'
        - '3.7'
        - '3.6'
    runs-on: macOS-10.15
    env:
      PIP_ONLY_BINARY: cmake
    steps:
    - uses: actions/checkout@v2
    - name: Python ${{ matrix.python.version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python.version }}
    - name: Install Pip
      run: python -m pip install --upgrade pip
    - name: Print versions
      run: python -m pip list
    - name: Build
      run: python -m pip install -v .[test,dev]
    - name: Check if kernel specification is sorted
      run: python dev/kernel-diagnostics.py --check-spec-sorted
    - name: Generate Kernel tests
      run: python dev/generate-tests.py
    - name: Test specification
      run: python -m pytest -vv -rs tests-spec
    - name: Test specification with explicitly defined values
      run: python -m pytest -vv -rs tests-spec-explicit
    - name: Test CPU kernels
      run: python -m pytest -vv -rs tests-cpu-kernels
    - name: Test
      run: python -m pytest -vv -rs test

  Linux:
    strategy:
      matrix:
        python.version:
            - '3.10'
            - '3.9'
            - '3.8'
            - '3.7'
            - '3.6'
        include:
            - python.version: '3.6'
              numpy.version: '1.13.1'
    runs-on: ubuntu-18.04
    env:
      PIP_ONLY_BINARY: cmake
    steps:
    - uses: actions/checkout@v2
    - name: Python ${{ matrix.python.version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python.version }}
    - name: Install Pip
      run: python -m pip install --upgrade pip
    - name: Install NumPy
      run: |
        if [ ${{ matrix.numpy.version }} = "latest" ]; then
          python -m pip install numpy;
        else
          python -m pip install numpy==${{ matrix.numpy.version }};
        fi
    - name: Build
      run: python -m pip install -v .[test,dev]
    - name: Print versions
      run: python -m pip list
    - name: Check if kernel specification is sorted
      run: python dev/kernel-diagnostics.py --check-spec-sorted
    - name: Generate Kernel tests
      run: python dev/generate-tests.py
    - name: Test specification
      run: python -m pytest -vv -rs tests-spec
    - name: Test specification with explicitly defined values
      run: python -m pytest -vv -rs tests-spec-explicit
    - name: Test CPU kernels
      run: python -m pytest -vv -rs tests-cpu-kernels
    - name: Test
      run: python -m pytest -vv -rs tests --cov=awkward._v2 --cov-report=term --cov-report=xml
    - name: Codecov
      run: bash <(curl -s https://codecov.io/bash)
      if: matrix.python.version == '3.9'
